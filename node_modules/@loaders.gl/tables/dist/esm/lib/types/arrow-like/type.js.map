{"version":3,"sources":["../../../../../src/lib/types/arrow-like/type.js"],"names":["Type","DataType","other","NONE","x","typeId","Null","Int","Float","Binary","Utf8","Bool","Decimal","Date","Time","Timestamp","Interval","List","Struct","Union","FixedSizeBinary","FixedSizeList","Map","Dictionary","Symbol","toStringTag","Uint8Array","isSigned","bitWidth","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Error","Int8","Int16","Int32","Int64","Uint8","Uint16","Uint32","Uint64","Precision","HALF","SINGLE","DOUBLE","precision","Float32Array","Float64Array","Float16","Float32","Float64","DateUnit","DAY","MILLISECOND","unit","DateDay","DateMillisecond","TimeUnit","SECOND","MICROSECOND","NANOSECOND","TimeSecond","TimeMillisecond","timezone","TimestampSecond","TimestampMillisecond","TimestampMicrosecond","TimestampNanosecond","IntervalUnit","DAY_TIME","YEAR_MONTH","IntervalDayTime","IntervalYearMonth","listSize","child","children","valueType","type","ArrayType"],"mappings":"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","sourcesContent":["// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nexport class DataType {\n  static isNull(x) {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x) {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x) {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x) {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x) {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x) {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x) {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x) {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x) {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x) {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x) {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x) {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x) {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x) {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x) {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x) {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x) {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x) {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId() {\n    return Type.NONE;\n  }\n  // get ArrayType() { return Array; }\n  compareTo(other) {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId() {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Null';\n  }\n  toString() {\n    return `Null`;\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId() {\n    return Type.Bool;\n  }\n  get ArrayType() {\n    return Uint8Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Bool';\n  }\n  toString() {\n    return `Bool`;\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId() {\n    return Type.Int;\n  }\n  get ArrayType() {\n    switch (this.bitWidth) {\n      case 8:\n        return this.isSigned ? Int8Array : Uint8Array;\n      case 16:\n        return this.isSigned ? Int16Array : Uint16Array;\n      case 32:\n        return this.isSigned ? Int32Array : Uint32Array;\n      case 64:\n        return this.isSigned ? Int32Array : Uint32Array;\n      default:\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'Int';\n  }\n  toString() {\n    return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId() {\n    return Type.Float;\n  }\n  get ArrayType() {\n    switch (this.precision) {\n      case Precision.HALF:\n        return Uint16Array;\n      case Precision.SINGLE:\n        return Float32Array;\n      case Precision.DOUBLE:\n        return Float64Array;\n      default:\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'Float';\n  }\n  toString() {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId() {\n    return Type.Utf8;\n  }\n  get ArrayType() {\n    return Uint8Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Utf8';\n  }\n  toString() {\n    return `Utf8`;\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId() {\n    return Type.Date;\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Date';\n  }\n  toString() {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  constructor(unit, bitWidth) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId() {\n    return Type.Time;\n  }\n  toString() {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Time';\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  constructor(unit, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId() {\n    return Type.Timestamp;\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Timestamp';\n  }\n  toString() {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId() {\n    return Type.Interval;\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Interval';\n  }\n  toString() {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  constructor(listSize, child) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId() {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  get ArrayType() {\n    return this.valueType.ArrayType;\n  }\n  get [Symbol.toStringTag]() {\n    return 'FixedSizeList';\n  }\n  toString() {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n"],"file":"type.js"}