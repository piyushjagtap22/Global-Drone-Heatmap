"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _assert = _interopRequireDefault(require("../utils/assert"));

var _type = require("../types/arrow-like/type");

var Field = function () {
  function Field(name) {
    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
    var nullable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    var metadata = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Map();
    (0, _classCallCheck2["default"])(this, Field);
    (0, _assert["default"])(typeof name === 'string');
    (0, _assert["default"])(!type || type instanceof _type.DataType);
    (0, _assert["default"])(typeof nullable === 'boolean');
    (0, _assert["default"])(!metadata || (0, _typeof2["default"])(metadata) === 'object');
    this.name = name;
    this.type = type;
    this.nullable = nullable;
    this.metadata = metadata;
  }

  (0, _createClass2["default"])(Field, [{
    key: "clone",
    value: function clone() {
      return new Field(this.name, this.type, this.nullable, this.metadata);
    }
  }, {
    key: "compareTo",
    value: function compareTo(other) {
      return this.name === other.name && this.type === other.type && this.nullable === other.nullable && this.metadata === other.metadata;
    }
  }, {
    key: "toString",
    value: function toString() {
      return "".concat(this.type).concat(this.nullable ? ', nullable' : '').concat(this.metadata ? ", metadata: ".concat(this.metadata) : '');
    }
  }, {
    key: "typeId",
    get: function get() {
      return this.type && this.type.typeId;
    }
  }]);
  return Field;
}();

exports["default"] = Field;
//# sourceMappingURL=field.js.map