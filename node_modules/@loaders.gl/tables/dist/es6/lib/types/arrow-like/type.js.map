{"version":3,"sources":["../../../../../src/lib/types/arrow-like/type.js"],"names":["Type","DataType","isNull","x","typeId","Null","isInt","Int","isFloat","Float","isBinary","Binary","isUtf8","Utf8","isBool","Bool","isDecimal","Decimal","isDate","Date","isTime","Time","isTimestamp","Timestamp","isInterval","Interval","isList","List","isStruct","Struct","isUnion","Union","isFixedSizeBinary","FixedSizeBinary","isFixedSizeList","FixedSizeList","isMap","Map","isDictionary","Dictionary","NONE","compareTo","other","Symbol","toStringTag","toString","ArrayType","Uint8Array","constructor","isSigned","bitWidth","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Error","Int8","Int16","Int32","Int64","Uint8","Uint16","Uint32","Uint64","Precision","HALF","SINGLE","DOUBLE","precision","Float32Array","Float64Array","Float16","Float32","Float64","DateUnit","DAY","MILLISECOND","unit","DateDay","DateMillisecond","TimeUnit","SECOND","MICROSECOND","NANOSECOND","TimeSecond","TimeMillisecond","timezone","TimestampSecond","TimestampMillisecond","TimestampMicrosecond","TimestampNanosecond","IntervalUnit","DAY_TIME","YEAR_MONTH","IntervalDayTime","IntervalYearMonth","listSize","child","children","valueType","type","valueField"],"mappings":"AAGA,SAAQA,IAAR,QAAmB,QAAnB;AAEA,OAAO,MAAMC,QAAN,CAAe;AACpB,SAAOC,MAAP,CAAcC,CAAd,EAAiB;AACf,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACK,IAA9B;AACD;;AACD,SAAOC,KAAP,CAAaH,CAAb,EAAgB;AACd,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACO,GAA9B;AACD;;AACD,SAAOC,OAAP,CAAeL,CAAf,EAAkB;AAChB,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACS,KAA9B;AACD;;AACD,SAAOC,QAAP,CAAgBP,CAAhB,EAAmB;AACjB,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACW,MAA9B;AACD;;AACD,SAAOC,MAAP,CAAcT,CAAd,EAAiB;AACf,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACa,IAA9B;AACD;;AACD,SAAOC,MAAP,CAAcX,CAAd,EAAiB;AACf,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACe,IAA9B;AACD;;AACD,SAAOC,SAAP,CAAiBb,CAAjB,EAAoB;AAClB,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACiB,OAA9B;AACD;;AACD,SAAOC,MAAP,CAAcf,CAAd,EAAiB;AACf,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACmB,IAA9B;AACD;;AACD,SAAOC,MAAP,CAAcjB,CAAd,EAAiB;AACf,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACqB,IAA9B;AACD;;AACD,SAAOC,WAAP,CAAmBnB,CAAnB,EAAsB;AACpB,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACuB,SAA9B;AACD;;AACD,SAAOC,UAAP,CAAkBrB,CAAlB,EAAqB;AACnB,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACyB,QAA9B;AACD;;AACD,SAAOC,MAAP,CAAcvB,CAAd,EAAiB;AACf,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAAC2B,IAA9B;AACD;;AACD,SAAOC,QAAP,CAAgBzB,CAAhB,EAAmB;AACjB,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAAC6B,MAA9B;AACD;;AACD,SAAOC,OAAP,CAAe3B,CAAf,EAAkB;AAChB,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAAC+B,KAA9B;AACD;;AACD,SAAOC,iBAAP,CAAyB7B,CAAzB,EAA4B;AAC1B,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACiC,eAA9B;AACD;;AACD,SAAOC,eAAP,CAAuB/B,CAAvB,EAA0B;AACxB,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACmC,aAA9B;AACD;;AACD,SAAOC,KAAP,CAAajC,CAAb,EAAgB;AACd,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACqC,GAA9B;AACD;;AACD,SAAOC,YAAP,CAAoBnC,CAApB,EAAuB;AACrB,WAAOA,CAAC,IAAIA,CAAC,CAACC,MAAF,KAAaJ,IAAI,CAACuC,UAA9B;AACD;;AAED,MAAInC,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACwC,IAAZ;AACD;;AAEDC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AAEf,WAAO,SAASA,KAAhB;AACD;;AA/DmB;AAoEtB,OAAO,MAAMrC,IAAN,SAAmBJ,QAAnB,CAA4B;AACjC,MAAIG,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACK,IAAZ;AACD;;AACD,OAAKsC,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,MAAP;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT;AACD;;AATgC;AAcnC,OAAO,MAAM9B,IAAN,SAAmBd,QAAnB,CAA4B;AACjC,MAAIG,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACe,IAAZ;AACD;;AACD,MAAI+B,SAAJ,GAAgB;AACd,WAAOC,UAAP;AACD;;AACD,OAAKJ,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,MAAP;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT;AACD;;AAZgC;AAiBnC,OAAO,MAAMtC,GAAN,SAAkBN,QAAlB,CAA2B;AAChC+C,EAAAA,WAAW,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAC9B;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACD;;AACD,MAAI9C,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACO,GAAZ;AACD;;AACD,MAAIuC,SAAJ,GAAgB;AACd,YAAQ,KAAKI,QAAb;AACE,WAAK,CAAL;AACE,eAAO,KAAKD,QAAL,GAAgBE,SAAhB,GAA4BJ,UAAnC;;AACF,WAAK,EAAL;AACE,eAAO,KAAKE,QAAL,GAAgBG,UAAhB,GAA6BC,WAApC;;AACF,WAAK,EAAL;AACE,eAAO,KAAKJ,QAAL,GAAgBK,UAAhB,GAA6BC,WAApC;;AACF,WAAK,EAAL;AACE,eAAO,KAAKN,QAAL,GAAgBK,UAAhB,GAA6BC,WAApC;;AACF;AACE,cAAM,IAAIC,KAAJ,wBAA0B,KAAKb,MAAM,CAACC,WAAZ,CAA1B,WAAN;AAVJ;AAYD;;AACD,OAAKD,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,KAAP;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT,qBAAU,KAAKI,QAAL,aAAV,eAAyC,KAAKC,QAA9C;AACD;;AA5B+B;AA+BlC,OAAO,MAAMO,IAAN,SAAmBlD,GAAnB,CAAuB;AAC5ByC,EAAAA,WAAW,GAAG;AACZ,UAAM,IAAN,EAAY,CAAZ;AACD;;AAH2B;AAK9B,OAAO,MAAMU,KAAN,SAAoBnD,GAApB,CAAwB;AAC7ByC,EAAAA,WAAW,GAAG;AACZ,UAAM,IAAN,EAAY,EAAZ;AACD;;AAH4B;AAK/B,OAAO,MAAMW,KAAN,SAAoBpD,GAApB,CAAwB;AAC7ByC,EAAAA,WAAW,GAAG;AACZ,UAAM,IAAN,EAAY,EAAZ;AACD;;AAH4B;AAK/B,OAAO,MAAMY,KAAN,SAAoBrD,GAApB,CAAwB;AAC7ByC,EAAAA,WAAW,GAAG;AACZ,UAAM,IAAN,EAAY,EAAZ;AACD;;AAH4B;AAK/B,OAAO,MAAMa,KAAN,SAAoBtD,GAApB,CAAwB;AAC7ByC,EAAAA,WAAW,GAAG;AACZ,UAAM,KAAN,EAAa,CAAb;AACD;;AAH4B;AAK/B,OAAO,MAAMc,MAAN,SAAqBvD,GAArB,CAAyB;AAC9ByC,EAAAA,WAAW,GAAG;AACZ,UAAM,KAAN,EAAa,EAAb;AACD;;AAH6B;AAKhC,OAAO,MAAMe,MAAN,SAAqBxD,GAArB,CAAyB;AAC9ByC,EAAAA,WAAW,GAAG;AACZ,UAAM,KAAN,EAAa,EAAb;AACD;;AAH6B;AAKhC,OAAO,MAAMgB,MAAN,SAAqBzD,GAArB,CAAyB;AAC9ByC,EAAAA,WAAW,GAAG;AACZ,UAAM,KAAN,EAAa,EAAb;AACD;;AAH6B;AAQhC,MAAMiB,SAAS,GAAG;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,MAAM,EAAE,EAFQ;AAGhBC,EAAAA,MAAM,EAAE;AAHQ,CAAlB;AAMA,OAAO,MAAM3D,KAAN,SAAoBR,QAApB,CAA6B;AAClC+C,EAAAA,WAAW,CAACqB,SAAD,EAAY;AACrB;AACA,SAAKA,SAAL,GAAiBA,SAAjB;AACD;;AACD,MAAIjE,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACS,KAAZ;AACD;;AACD,MAAIqC,SAAJ,GAAgB;AACd,YAAQ,KAAKuB,SAAb;AACE,WAAKJ,SAAS,CAACC,IAAf;AACE,eAAOb,WAAP;;AACF,WAAKY,SAAS,CAACE,MAAf;AACE,eAAOG,YAAP;;AACF,WAAKL,SAAS,CAACG,MAAf;AACE,eAAOG,YAAP;;AACF;AACE,cAAM,IAAIf,KAAJ,wBAA0B,KAAKb,MAAM,CAACC,WAAZ,CAA1B,WAAN;AARJ;AAUD;;AACD,OAAKD,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,OAAP;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT,0BAAe,KAAKwB,SAApB;AACD;;AAzBiC;AA4BpC,OAAO,MAAMG,OAAN,SAAsB/D,KAAtB,CAA4B;AACjCuC,EAAAA,WAAW,GAAG;AACZ,UAAMiB,SAAS,CAACC,IAAhB;AACD;;AAHgC;AAKnC,OAAO,MAAMO,OAAN,SAAsBhE,KAAtB,CAA4B;AACjCuC,EAAAA,WAAW,GAAG;AACZ,UAAMiB,SAAS,CAACE,MAAhB;AACD;;AAHgC;AAKnC,OAAO,MAAMO,OAAN,SAAsBjE,KAAtB,CAA4B;AACjCuC,EAAAA,WAAW,GAAG;AACZ,UAAMiB,SAAS,CAACG,MAAhB;AACD;;AAHgC;AAQnC,OAAO,MAAMvD,IAAN,SAAmBZ,QAAnB,CAA4B;AACjC,MAAIG,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACa,IAAZ;AACD;;AACD,MAAIiC,SAAJ,GAAgB;AACd,WAAOC,UAAP;AACD;;AACD,OAAKJ,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,MAAP;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT;AACD;;AAZgC;AAiBnC,MAAM8B,QAAQ,GAAG;AACfC,EAAAA,GAAG,EAAE,CADU;AAEfC,EAAAA,WAAW,EAAE;AAFE,CAAjB;AAKA,OAAO,MAAM1D,IAAN,SAAmBlB,QAAnB,CAA4B;AACjC+C,EAAAA,WAAW,CAAC8B,IAAD,EAAO;AAChB;AACA,SAAKA,IAAL,GAAYA,IAAZ;AACD;;AACD,MAAI1E,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACmB,IAAZ;AACD;;AACD,MAAI2B,SAAJ,GAAgB;AACd,WAAOQ,UAAP;AACD;;AACD,OAAKX,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,MAAP;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT,yBAAc,CAAC,KAAKiC,IAAL,GAAY,CAAb,IAAkB,EAAhC,cAAsCH,QAAQ,CAAC,KAAKG,IAAN,CAA9C;AACD;;AAhBgC;AAmBnC,OAAO,MAAMC,OAAN,SAAsB5D,IAAtB,CAA2B;AAChC6B,EAAAA,WAAW,GAAG;AACZ,UAAM2B,QAAQ,CAACC,GAAf;AACD;;AAH+B;AAKlC,OAAO,MAAMI,eAAN,SAA8B7D,IAA9B,CAAmC;AACxC6B,EAAAA,WAAW,GAAG;AACZ,UAAM2B,QAAQ,CAACE,WAAf;AACD;;AAHuC;AAM1C,MAAMI,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,CADO;AAEfL,EAAAA,WAAW,EAAE,GAFE;AAGfM,EAAAA,WAAW,EAAE,GAHE;AAIfC,EAAAA,UAAU,EAAE;AAJG,CAAjB;AAOA,OAAO,MAAM/D,IAAN,SAAmBpB,QAAnB,CAA4B;AACjC+C,EAAAA,WAAW,CAAC8B,IAAD,EAAO5B,QAAP,EAAiB;AAC1B;AACA,SAAK4B,IAAL,GAAYA,IAAZ;AACA,SAAK5B,QAAL,GAAgBA,QAAhB;AACD;;AACD,MAAI9C,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACqB,IAAZ;AACD;;AACDwB,EAAAA,QAAQ,GAAG;AACT,yBAAc,KAAKK,QAAnB,cAA+B+B,QAAQ,CAAC,KAAKH,IAAN,CAAvC;AACD;;AACD,OAAKnC,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,MAAP;AACD;;AACD,MAAIE,SAAJ,GAAgB;AACd,WAAOQ,UAAP;AACD;;AAjBgC;AAoBnC,OAAO,MAAM+B,UAAN,SAAyBhE,IAAzB,CAA8B;AACnC2B,EAAAA,WAAW,GAAG;AACZ,UAAMiC,QAAQ,CAACC,MAAf,EAAuB,EAAvB;AACD;;AAHkC;AAKrC,OAAO,MAAMI,eAAN,SAA8BjE,IAA9B,CAAmC;AACxC2B,EAAAA,WAAW,GAAG;AACZ,UAAMiC,QAAQ,CAACJ,WAAf,EAA4B,EAA5B;AACD;;AAHuC;AAQ1C,OAAO,MAAMtD,SAAN,SAAwBtB,QAAxB,CAAiC;AACtC+C,EAAAA,WAAW,CAAC8B,IAAD,EAAOS,QAAQ,GAAG,IAAlB,EAAwB;AACjC;AACA,SAAKT,IAAL,GAAYA,IAAZ;AACA,SAAKS,QAAL,GAAgBA,QAAhB;AACD;;AACD,MAAInF,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACuB,SAAZ;AACD;;AACD,MAAIuB,SAAJ,GAAgB;AACd,WAAOQ,UAAP;AACD;;AACD,OAAKX,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,WAAP;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT,+BAAoBoC,QAAQ,CAAC,KAAKH,IAAN,CAA5B,SAA0C,KAAKS,QAAL,eAAqB,KAAKA,QAA1B,MAA1C;AACD;;AAjBqC;AAoBxC,OAAO,MAAMC,eAAN,SAA8BjE,SAA9B,CAAwC;AAC7CyB,EAAAA,WAAW,CAACuC,QAAQ,GAAG,IAAZ,EAAkB;AAC3B,UAAMN,QAAQ,CAACC,MAAf,EAAuBK,QAAvB;AACD;;AAH4C;AAK/C,OAAO,MAAME,oBAAN,SAAmClE,SAAnC,CAA6C;AAClDyB,EAAAA,WAAW,CAACuC,QAAQ,GAAG,IAAZ,EAAkB;AAC3B,UAAMN,QAAQ,CAACJ,WAAf,EAA4BU,QAA5B;AACD;;AAHiD;AAKpD,OAAO,MAAMG,oBAAN,SAAmCnE,SAAnC,CAA6C;AAClDyB,EAAAA,WAAW,CAACuC,QAAQ,GAAG,IAAZ,EAAkB;AAC3B,UAAMN,QAAQ,CAACE,WAAf,EAA4BI,QAA5B;AACD;;AAHiD;AAKpD,OAAO,MAAMI,mBAAN,SAAkCpE,SAAlC,CAA4C;AACjDyB,EAAAA,WAAW,CAACuC,QAAQ,GAAG,IAAZ,EAAkB;AAC3B,UAAMN,QAAQ,CAACG,UAAf,EAA2BG,QAA3B;AACD;;AAHgD;AAMnD,MAAMK,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CADS;AAEnBC,EAAAA,UAAU,EAAE;AAFO,CAArB;AAKA,OAAO,MAAMrE,QAAN,SAAuBxB,QAAvB,CAAgC;AACrC+C,EAAAA,WAAW,CAAC8B,IAAD,EAAO;AAChB;AACA,SAAKA,IAAL,GAAYA,IAAZ;AACD;;AACD,MAAI1E,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACyB,QAAZ;AACD;;AACD,MAAIqB,SAAJ,GAAgB;AACd,WAAOQ,UAAP;AACD;;AACD,OAAKX,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,UAAP;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT,8BAAmB+C,YAAY,CAAC,KAAKd,IAAN,CAA/B;AACD;;AAhBoC;AAmBvC,OAAO,MAAMiB,eAAN,SAA8BtE,QAA9B,CAAuC;AAC5CuB,EAAAA,WAAW,GAAG;AACZ,UAAM4C,YAAY,CAACC,QAAnB;AACD;;AAH2C;AAK9C,OAAO,MAAMG,iBAAN,SAAgCvE,QAAhC,CAAyC;AAC9CuB,EAAAA,WAAW,GAAG;AACZ,UAAM4C,YAAY,CAACE,UAAnB;AACD;;AAH6C;AAMhD,OAAO,MAAM3D,aAAN,SAA4BlC,QAA5B,CAAqC;AAC1C+C,EAAAA,WAAW,CAACiD,QAAD,EAAWC,KAAX,EAAkB;AAC3B;AACA,SAAKD,QAAL,GAAgBA,QAAhB;AACA,SAAKE,QAAL,GAAgB,CAACD,KAAD,CAAhB;AACD;;AACD,MAAI9F,MAAJ,GAAa;AACX,WAAOJ,IAAI,CAACmC,aAAZ;AACD;;AACD,MAAIiE,SAAJ,GAAgB;AACd,WAAO,KAAKD,QAAL,CAAc,CAAd,EAAiBE,IAAxB;AACD;;AACD,MAAIC,UAAJ,GAAiB;AACf,WAAO,KAAKH,QAAL,CAAc,CAAd,CAAP;AACD;;AACD,MAAIrD,SAAJ,GAAgB;AACd,WAAO,KAAKsD,SAAL,CAAetD,SAAtB;AACD;;AACD,OAAKH,MAAM,CAACC,WAAZ,IAA2B;AACzB,WAAO,eAAP;AACD;;AACDC,EAAAA,QAAQ,GAAG;AACT,mCAAwB,KAAKoD,QAA7B,eAA0C,KAAKG,SAA/C;AACD;;AAvByC","sourcesContent":["// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nexport class DataType {\n  static isNull(x) {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x) {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x) {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x) {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x) {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x) {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x) {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x) {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x) {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x) {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x) {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x) {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x) {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x) {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x) {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x) {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x) {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x) {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId() {\n    return Type.NONE;\n  }\n  // get ArrayType() { return Array; }\n  compareTo(other) {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId() {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Null';\n  }\n  toString() {\n    return `Null`;\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId() {\n    return Type.Bool;\n  }\n  get ArrayType() {\n    return Uint8Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Bool';\n  }\n  toString() {\n    return `Bool`;\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId() {\n    return Type.Int;\n  }\n  get ArrayType() {\n    switch (this.bitWidth) {\n      case 8:\n        return this.isSigned ? Int8Array : Uint8Array;\n      case 16:\n        return this.isSigned ? Int16Array : Uint16Array;\n      case 32:\n        return this.isSigned ? Int32Array : Uint32Array;\n      case 64:\n        return this.isSigned ? Int32Array : Uint32Array;\n      default:\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'Int';\n  }\n  toString() {\n    return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId() {\n    return Type.Float;\n  }\n  get ArrayType() {\n    switch (this.precision) {\n      case Precision.HALF:\n        return Uint16Array;\n      case Precision.SINGLE:\n        return Float32Array;\n      case Precision.DOUBLE:\n        return Float64Array;\n      default:\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n  }\n  get [Symbol.toStringTag]() {\n    return 'Float';\n  }\n  toString() {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId() {\n    return Type.Utf8;\n  }\n  get ArrayType() {\n    return Uint8Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Utf8';\n  }\n  toString() {\n    return `Utf8`;\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId() {\n    return Type.Date;\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Date';\n  }\n  toString() {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  constructor(unit, bitWidth) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId() {\n    return Type.Time;\n  }\n  toString() {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Time';\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  constructor(unit, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId() {\n    return Type.Timestamp;\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Timestamp';\n  }\n  toString() {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId() {\n    return Type.Interval;\n  }\n  get ArrayType() {\n    return Int32Array;\n  }\n  get [Symbol.toStringTag]() {\n    return 'Interval';\n  }\n  toString() {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  constructor(listSize, child) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId() {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  get ArrayType() {\n    return this.valueType.ArrayType;\n  }\n  get [Symbol.toStringTag]() {\n    return 'FixedSizeList';\n  }\n  toString() {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n"],"file":"type.js"}